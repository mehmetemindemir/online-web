import LayoutTwo from "../../../../components/Layout/LayoutTwo";import {Col, Container, Row} from "react-bootstrap";import {BreadcrumbOne} from "../../../../components/Breadcrumb";import Product from "../../../../components/Product/Product";import {ShopSidebar} from "../../../../components/Product/Shop";import * as actions from '../../../../redux/actions'import {getAsyncProduct} from '../../../../redux/actions'import {useEffect, useState} from "react";function Category({menu, product, subCategories, category, subCategoryId, categoryId}) {    const [tempProduct, setTempProduct] = useState([]);    const [tempSubCatId, setTempSubCatId] = useState(subCategoryId);    useEffect(() => {        setTempSubCatId(subCategoryId);    }, [subCategoryId, product]);    const getSorCategory = (subCatId) => {        setTempSubCatId(subCatId);    }    useEffect(() => {        console.log("tempSubCatId :", tempSubCatId)        if (product && tempSubCatId > 0) {            setTempProduct(product.filter(x => x.subCategoryId == tempSubCatId));        } else if (product && tempSubCatId == 0) {            setTempProduct(product)        }    }, [tempSubCatId, product]);    let categoryName = '';    let productView = "loading";    let data = "Loading...";    if (category) {        categoryName = category[0].categoryName;    }    if (tempProduct) {        productView = <Product            products={tempProduct}            bottomSpace="space-mb--r50"            column={3}        />    }    if (menu && subCategories && category) {        data = <LayoutTwo menu={menu}>            {/* breadcrumb */}            <BreadcrumbOne                pageTitle={categoryName}                backgroundImage="/assets/images/backgrounds/pexels-photo-356043.jpeg"            >            </BreadcrumbOne>            {/* shop page body */}            <div className="shop-page-content__body space-mt--r130 space-mb--r130">                <Container>                    <Row>                        <Col                            lg={3}                            className="order-2 order-lg-1 space-mt-mobile-only--50"                        >                            <ShopSidebar categories={subCategories} getSorCategory={getSorCategory}                                         categoryName={categoryName}                                         selected={tempSubCatId}/>                        </Col>                        <Col lg={9} className="order-1 order-lg-2">                            {/* shop products */}                            <div className="shop-products">                                <Row className={4}>                                    {productView}                                </Row>                            </div>                        </Col>                    </Row>                </Container>            </div>        </LayoutTwo>;    }    return (        <div>            {data}        </div>    )}export async function getServerSideProps(context) {    const subCategoryId = context.params.id;    const categoryId = context.params.category;    const reqData = {        companyId: 1,        brandId: 0,        categoryId: categoryId,        subCategoryId: 0,        lang: "TR"    }    const resProduct = await getAsyncProduct(reqData);    const reqMenu = {        companyId: 1    };    const resMenu = await actions.getAsyncMenu(reqMenu);    let subCategories = [];    const category = resMenu.menu.data.filter(x => x.id == categoryId);    if (category[0] && category[0].subCate.length > 0) {        subCategories = category[0].subCate;    }    let product = resProduct.product.data;    console.log("loading End");    return {        props: {            product: product,            menu: resMenu.menu.data,            subCategories: subCategories,            categoryId: categoryId,            category: category,            subCategoryId: subCategoryId        },    }}export default Category;